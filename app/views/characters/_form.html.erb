<%= form_with(model: character, local: true) do |form| %>
  <% if character.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(character.errors.count, "error") %> prohibited this character from being saved:</h2>

      <ul>
      <% character.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :images %>
      <% if form.object.images.present? %>
        <div>
          <%= "削除したい画像はチェックを入れる" %>
        </div>
        <% form.object.images.each do |image| %>
          <div class="side-by-side">
            <%= image_tag image, class: "image-size" %>
            <%= form.check_box :image_ids, {multiple: true}, image.id, false %>
          </div>
        <% end %>
      <% end %>
    <div>
      <%= form.file_field :images, multiple: true %>
    </div>
  </div>

  <div class="field">
    <%= form.label :name_ja %>
    <div class="text-field">
      <%= form.text_field :name_ja, onkeydown: "NameJaFieldKeyDown()" %>
      <div id="name-ja-clear" class="clear-button fas fa-times" onclick="NameJaClearButton()"></div>
    </div>
  </div>

  <div class="field">
    <%= form.label :name_en %>
    <div class="text-field">
      <%= form.text_field :name_en, onkeydown: "NameEnFieldKeyDown()" %>
      <div id="name-en-clear" class="clear-button fas fa-times" onclick="NameEnClearButton()"></div>
    </div>
  </div>

  <div class="field">
    <%= form.label :name_gun %>
    <div class="text-field">
      <%= form.text_field :name_gun, onkeydown: "NameGunFieldKeyDown()" %>
      <div id="name-gun-clear" class="clear-button fas fa-times" onclick="NameGunClearButton()"></div>
    </div>
  </div>

  <div class="field">
    <%= form.label :gun_category_id %>
    <div class="radio-button-form">
      <%= form.collection_radio_buttons :gun_category_id, GunCategory.all, :id, :name, form.object.gun_category_id.blank? ? {checked: 1} : {checked: form.object.gun_category_id} %>
    </div>
  </div>

  <div class="field">
    <%= form.label :gun_type_id %>
    <%= form.number_field :gun_type_id %>
  </div>

  <div class="field">
    <%= form.label :country_id %>
    <%= form.collection_select(:country_id, Country.all, :id, :name) %>
  </div>

  <div class="field">
    <%= form.label :motif %>
    <div class="text-area">
      <%= form.text_area :motif, onkeydown: "MotifKeyDown()" %>
      <div id="motif-clear" class="clear-button fas fa-times" onclick="MotifClearButton()"></div>
    </div>
  </div>

  <%= form.fields_for :information do |i| %>
    <%= render "information_form", form: i %>
  <% end %>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>

<script>
// ここから日本語名入力
  // 日本語名クリアボタン
  function NameJaClearButton(){
    clearTargetId = document.getElementById("character_name_ja");
    this.clearTargetId.value="";
    this.clearTargetId.focus(); // クリアボタン押下でフォーカス
    target = document.getElementById("name-ja-clear");
    target.style.visibility = "hidden"; // 内容クリアでクリアボタンも非表示にする
  }
  // 入力時のみクリアボタン表示
  function NameJaFieldKeyDown(){
    clearTargetId = document.getElementById("character_name_ja");
    if (this.clearTargetId.value.length > 0) {
      target = document.getElementById("name-ja-clear");
      target.style.visibility = "visible";
    }
  }
// ここまで日本語名入力

// ここから英語名入力
  // 英語名クリアボタン
  function NameEnClearButton(){
    clearTargetId = document.getElementById("character_name_en");
    this.clearTargetId.value="";
    this.clearTargetId.focus(); // クリアボタン押下でフォーカス
    target = document.getElementById("name-en-clear");
    target.style.visibility = "hidden"; // クリアでクリアボタンも非表示にする
  }
  // 入力時のみクリアボタン表示
  function NameEnFieldKeyDown(){
    clearTargetId = document.getElementById("character_name_en");
    if (this.clearTargetId.value.length > 0) {
      target = document.getElementById("name-en-clear");
      target.style.visibility = "visible";
    }
  }
// ここまで英語名入力

// ここからモチーフ名入力
  // モチーフ名クリアボタン
  function NameGunClearButton(){
    clearTargetId = document.getElementById("character_name_gun");
    this.clearTargetId.value="";
    this.clearTargetId.focus(); // クリアボタン押下でフォーカス
    target = document.getElementById("name-gun-clear");
    target.style.visibility = "hidden"; // クリアでクリアボタンも非表示にする
  }
  // 入力時のみクリアボタン表示
  function NameGunFieldKeyDown(){
    clearTargetId = document.getElementById("character_name_gun");
    if (this.clearTargetId.value.length > 0) {
      target = document.getElementById("name-gun-clear");
      target.style.visibility = "visible";
    }
  }
// ここまでモチーフ名入力

// ここからモチーフ文入力
  // モチーフ文クリアボタン
  function MotifClearButton(){
    clearTargetId = document.getElementById("character_motif");
    this.clearTargetId.value="";
    this.clearTargetId.focus(); // クリアボタン押下でフォーカス
    target = document.getElementById("motif-clear");
    target.style.visibility = "hidden"; // クリアでクリアボタンも非表示にする
  }
  // 入力時のみクリアボタン表示
  function MotifKeyDown(){
    clearTargetId = document.getElementById("character_motif");
    if (this.clearTargetId.value.length > 0) {
      target = document.getElementById("motif-clear");
      target.style.visibility = "visible";
    }
  }
// ここまでモチーフ文入力

// ここから自己紹介文入力
  // 自己紹介文クリアボタン
  function IntroductionClearButton(ele){
    // 変数展開したいので``でIDを囲む
    clearTargetId = document.getElementById(`character_information_attributes_${ele}_introduction`);
    this.clearTargetId.value="";
    this.clearTargetId.focus(); // クリアボタン押下でフォーカス
    target = document.getElementById(`introduction-${ele}-clear`);
    target.style.visibility = "hidden"; // クリアでクリアボタンも非表示にする
  }
  // 入力時のみクリアボタン表示
  function IntroductionKeyDown(ele){
    clearTargetId = document.getElementById(`character_information_attributes_${ele}_introduction`);
    if (this.clearTargetId.value.length > 0) {
      target = document.getElementById(`introduction-${ele}-clear`);
      target.style.visibility = "visible";
    }
  }
// ここまで自己紹介文入力

// ここから趣味入力
  // 趣味クリアボタン
  function HobbyClearButton(ele){
    clearTargetId = document.getElementById(`character_information_attributes_${ele}_hobby`);
    this.clearTargetId.value="";
    this.clearTargetId.focus(); // クリアボタン押下でフォーカス
    target = document.getElementById(`hobby-${ele}-clear`);
    target.style.visibility = "hidden"; // クリアでクリアボタンも非表示にする
  }
  // 入力時のみクリアボタン表示
  function HobbyKeyDown(ele){
    clearTargetId = document.getElementById(`character_information_attributes_${ele}_hobby`);
    if (this.clearTargetId.value.length > 0) {
      target = document.getElementById(`hobby-${ele}-clear`);
      target.style.visibility = "visible";
    }
  }
// ここまで趣味入力

// ここから好きなもの入力
  // 好きなものクリアボタン
  function FavoriteClearButton(ele){
    clearTargetId = document.getElementById(`character_information_attributes_${ele}_favorite`);
    this.clearTargetId.value="";
    this.clearTargetId.focus(); // クリアボタン押下でフォーカス
    target = document.getElementById(`favorite-${ele}-clear`);
    target.style.visibility = "hidden"; // クリアでクリアボタンも非表示にする
  }
  // 入力時のみクリアボタン表示
  function FavoriteKeyDown(ele){
    clearTargetId = document.getElementById(`character_information_attributes_${ele}_favorite`);
    if (this.clearTargetId.value.length > 0) {
      target = document.getElementById(`favorite-${ele}-clear`);
      target.style.visibility = "visible";
    }
  }
// ここまで好きなもの入力
</script>
